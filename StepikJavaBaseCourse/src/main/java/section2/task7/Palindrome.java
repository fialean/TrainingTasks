package section2.task7;

/**
 * Реализуйте метод, проверяющий, является ли заданная строка палиндромом.
 * Палиндромом называется строка, которая читается одинаково слева направо и справа налево (в том числе пустая).
 * При определении "палиндромности" строки должны учитываться только буквы и цифры. А пробелы, знаки препинания,
 * а также регистр символов должны игнорироваться. Гарантируется, что в метод попадают только строки, состоящие
 * из символов ASCII (цифры, латинские буквы, знаки препинания). Т.е. русских, китайских и прочих экзотических
 * символов в строке не будет.
 * <p>
 * Воспользуйтесь предоставленным шаблоном. Декларацию класса, метод main и обработку ввода-вывода добавит проверяющая система.
 * <p>
 * Подсказки (не читайте, если хотите решить сами):
 * <ul>
 *  <li></>для удаления из строки всех символов, не являющихся буквами и цифрами, можно воспользоваться регулярным выражением "[^a-zA-Z0-9]";</li>
 *  <li>найдите в классе String метод, выполняющий замену по регулярному выражению;</li>
 *  <li>для перестановки символов строки в обратном порядке можно воспользоваться методом reverse(), который находится в классе StringBuilder;</li>
 *  <li>в классе String есть методы для преобразования всей строки в верхний и нижний регистр.</li>
 * </ul>
 * <p>
 * Sample Input: Madam, I'm Adam!; Sample Output: true;
 *
 * @author Firsin
 * @since 31.08.2018
 */

public class Palindrome {
	/**
	 * Checks if given <code>text</code> is a palindrome.
	 *
	 * @param text any string
	 * @return <code>true</code> when <code>text</code> is a palindrome, <code>false</code> otherwise
	 */
	public static boolean isPalindrome(String text) {
		String str = text.replaceAll("[^A-Za-z0-9]+", "");
		StringBuilder str2 = new StringBuilder(str).reverse();
		return str.toUpperCase().equals(str2.toString().toUpperCase());
	}
}
